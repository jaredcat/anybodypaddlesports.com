---
import Hero from '@/components/Hero.astro';
import Icon from '@/components/Icon.astro';
import Layout from '@/components/Layout.astro';
import LocationBookingSection from '@/components/LocationBookingSection.astro';
import { getActiveLocations } from '@/config/locations.ts';

const activeLocations = getActiveLocations();

// Fetch actual event types from Cal.com API (server-side with Vercel)
let availableEventTypes: any[] = [];
try {
  const apiKey = import.meta.env.CAL_API_KEY;
  if (apiKey) {
    console.log('Fetching Cal.com event types...');
    const response = await fetch(
      `https://api.cal.com/v1/event-types?apiKey=${apiKey}`,
      {
        headers: {
          'Content-Type': 'application/json',
        },
      },
    );
    if (response.ok) {
      const data = await response.json();
      availableEventTypes = data.event_types || [];
      console.log(`Found ${availableEventTypes.length} event types`);
    } else {
      console.warn(
        'Cal.com API response not ok:',
        response.status,
        response.statusText,
      );
    }
  } else {
    console.warn('CAL_API_KEY environment variable not found');
  }
} catch (error) {
  console.warn('Could not fetch event types for booking page:', error);
}

// Fallback static event types (for development or if API fails)
const fallbackEventTypes = [
  // Tours
  {
    title: 'Tualatin Community Park - 2-Hour Guided Tour',
    slug: 'tualatin-2hr-tour',
    isRental: false,
  },
  {
    title: 'Tualatin Community Park - Full Day Tour',
    slug: 'tualatin-full-day',
    isRental: false,
  },
  {
    title: 'Silverton Reservoir - 2-Hour Guided Tour',
    slug: 'silverton-2hr-tour',
    isRental: false,
  },
  {
    title: 'Silverton Reservoir - Full Day Tour',
    slug: 'silverton-full-day',
    isRental: false,
  },
  {
    title: 'North Fork Estacada Reservoir - 2-Hour Guided Tour',
    slug: 'estacada-2hr-tour',
    isRental: false,
  },
  {
    title: 'North Fork Estacada Reservoir - Full Day Tour',
    slug: 'estacada-full-day',
    isRental: false,
  },

  // Rentals
  {
    title: 'Tualatin Community Park - Equipment Rental',
    slug: 'tualatin-rental',
    isRental: true,
  },
  {
    title: 'Silverton Reservoir - Equipment Rental',
    slug: 'silverton-rental',
    isRental: true,
  },
  {
    title: 'North Fork Estacada Reservoir - Equipment Rental',
    slug: 'estacada-rental',
    isRental: true,
  },
];

// Use Cal.com data if available, otherwise fallback
const eventTypesToUse =
  availableEventTypes.length > 0
    ? availableEventTypes.map((et) => ({
        title: et.title,
        slug: et.slug,
        isRental: et.title.toLowerCase().includes('rental'),
      }))
    : fallbackEventTypes;

// Group event types by location and type
const tourEventsByLocation = new Map();
const rentalEventsByLocation = new Map();

eventTypesToUse.forEach((eventType) => {
  // Parse location from title (format: "Location - Event Name")
  const titleParts = eventType.title.split(' - ');
  if (titleParts.length >= 2) {
    const location = titleParts[0];
    const eventName = titleParts.slice(1).join(' - ');

    // Use the isRental flag to determine type
    const targetMap = eventType.isRental
      ? rentalEventsByLocation
      : tourEventsByLocation;

    if (!targetMap.has(location)) {
      targetMap.set(location, []);
    }

    targetMap.get(location).push({
      name: eventName,
      calLink: `paddlesports/${eventType.slug}`,
      type:
        eventName.toLowerCase().includes('2-hour') ||
        eventName.toLowerCase().includes('full')
          ? 'primary'
          : 'secondary',
    });
  }
});

// Generate location data for tours
const tourLocations = activeLocations
  .map((location) => {
    const events = tourEventsByLocation.get(location.name) || [];
    return {
      location: {
        name: location.name,
        slug: location.slug,
      },
      eventTypes: events,
    };
  })
  .filter((loc) => loc.eventTypes.length > 0);

// Generate location data for rentals
const rentalLocations = activeLocations
  .map((location) => {
    const events = rentalEventsByLocation.get(location.name) || [];
    return {
      location: {
        name: location.name,
        slug: location.slug,
      },
      eventTypes: events,
    };
  })
  .filter((loc) => loc.eventTypes.length > 0);
---

<Layout
  title="Book Your Adventure - AnyBody Paddlesports"
  description="Book paddle board tours and equipment rentals with AnyBody Paddlesports. Choose from guided tours or equipment-only rentals.">
  <!-- Hero Section -->
  <Hero
    title="Book Your Adventure"
    description="Choose from guided tours with certified instructors or equipment rentals for your own adventure"
  />

  <section class="section-padding bg-gray-50">
    <div class="container-custom">
      <div class="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
        <!-- Guided Tours -->
        <div class="bg-white rounded-xl shadow-lg p-8">
          <div class="text-center mb-6">
            <div
              class="w-16 h-16 bg-primary-600 rounded-full flex items-center justify-center mx-auto mb-4">
              <Icon name="users" size="lg" class="text-white" />
            </div>
            <h2 class="text-2xl font-bold text-gray-900 mb-2">Guided Tours</h2>
            <p class="text-gray-600">
              Professional instruction and guided experiences
            </p>
          </div>

          <ul class="space-y-3 mb-8">
            <li class="flex items-center text-gray-700">
              <Icon name="check-solid" size="sm" class="text-green-500 mr-3" />
              Certified instructor included
            </li>
            <li class="flex items-center text-gray-700">
              <Icon name="check-solid" size="sm" class="text-green-500 mr-3" />
              All equipment provided
            </li>
            <li class="flex items-center text-gray-700">
              <Icon name="check-solid" size="sm" class="text-green-500 mr-3" />
              Safety training included
            </li>
            <li class="flex items-center text-gray-700">
              <Icon name="check-solid" size="sm" class="text-green-500 mr-3" />
              Custom video option available
            </li>
          </ul>

          <!-- Location-based booking options -->
          <div class="space-y-4">
            {
              tourLocations.length > 0 ? (
                tourLocations.map((locationData) => (
                  <LocationBookingSection
                    location={locationData.location}
                    eventTypes={locationData.eventTypes}
                  />
                ))
              ) : (
                <div class="border-2 border-yellow-200 rounded-lg p-6 bg-yellow-50">
                  <h4 class="font-semibold text-yellow-800 mb-2">
                    ðŸš§ Tours Coming Soon!
                  </h4>
                  <p class="text-yellow-700 text-sm mb-3">
                    We're setting up our guided tour bookings. Check back soon
                    or contact us directly to arrange a tour.
                  </p>
                  <a href="/contact" class="btn-secondary text-sm">
                    Contact Us
                  </a>
                </div>
              )
            }
          </div>
        </div>

        <!-- Equipment Rentals -->
        <div class="bg-white rounded-xl shadow-lg p-8">
          <div class="text-center mb-6">
            <div
              class="w-16 h-16 bg-accent-600 rounded-full flex items-center justify-center mx-auto mb-4">
              <Icon name="cube" size="lg" class="text-white" />
            </div>
            <h2 class="text-2xl font-bold text-gray-900 mb-2">
              Equipment Rentals
            </h2>
            <p class="text-gray-600">
              Rent quality gear for your own adventure
            </p>
          </div>

          <ul class="space-y-3 mb-8">
            <li class="flex items-center text-gray-700">
              <Icon name="check-solid" size="sm" class="text-green-500 mr-3" />
              Premium paddle boards
            </li>
            <li class="flex items-center text-gray-700">
              <Icon name="check-solid" size="sm" class="text-green-500 mr-3" />
              Dry bags included
            </li>
            <li class="flex items-center text-gray-700">
              <Icon name="check-solid" size="sm" class="text-green-500 mr-3" />
              Flexible pickup/return
            </li>
          </ul>

          <!-- Location-based rental options -->
          <div class="space-y-4">
            {
              rentalLocations.length > 0 ? (
                rentalLocations.map((locationData) => (
                  <LocationBookingSection
                    location={locationData.location}
                    eventTypes={locationData.eventTypes}
                  />
                ))
              ) : (
                <div class="border-2 border-yellow-200 rounded-lg p-6 bg-yellow-50">
                  <h4 class="font-semibold text-yellow-800 mb-2">
                    ðŸš§ Rentals Coming Soon!
                  </h4>
                  <p class="text-yellow-700 text-sm mb-3">
                    We're setting up our equipment rental bookings. Check back
                    soon or contact us directly to arrange a rental.
                  </p>
                  <a href="/contact" class="btn-secondary text-sm">
                    Contact Us
                  </a>
                </div>
              )
            }
          </div>
        </div>
      </div>

      <div class="text-center mt-12">
        <p class="text-gray-600 mb-4">
          Have questions about booking? Need a custom package?
        </p>
        <a href="/contact" class="btn-secondary"> Contact Us </a>
      </div>
    </div>
  </section>

  <!-- Cal.com embed script with proper loading -->
  <script>
    // Initialize Cal.com embed when DOM is ready
    document.addEventListener('DOMContentLoaded', function () {
      // Load Cal.com embed script
      const script = document.createElement('script');
      script.src = 'https://app.cal.com/embed/embed.js';
      script.async = true;
      script.onload = function () {
        // Script loaded successfully
        console.log('Cal.com embed script loaded');
      };
      script.onerror = function () {
        console.warn('Failed to load Cal.com embed script');
      };
      document.head.appendChild(script);
    });
  </script>
</Layout>
