<!-- Newsletter Section -->
<section class="section-padding bg-gray-50">
  <div class="container-custom">
    <div class="max-w-2xl mx-auto text-center">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
        Subscribe to our Newsletter
      </h2>
      <p class="text-xl text-gray-700 mb-8">
        Stay updated on new locations, special offers, and paddle boarding tips
      </p>

      <form
        class="flex flex-col sm:flex-row gap-4 max-w-md mx-auto"
        id="newsletterForm">
        <input
          type="email"
          name="email"
          placeholder="Email"
          required
          class="flex-1 px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
        />
        <button
          type="submit"
          id="newsletterButton"
          class="bg-primary-600 hover:bg-primary-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
          <span class="subscribe-text">Subscribe</span>
          <span class="loading-text hidden">Subscribing...</span>
        </button>
      </form>

      <!-- Newsletter status messages -->
      <div
        id="newsletterStatus"
        class="hidden mt-4"
        role="alert"
        aria-live="polite">
      </div>
    </div>
  </div>
</section>

<script>
  // Newsletter Form Handler (ConvertKit API)
  document
    .getElementById('newsletterForm')
    ?.addEventListener('submit', async (e) => {
      e.preventDefault();

      const form = e.target as HTMLFormElement;
      const submitButton = document.getElementById(
        'newsletterButton',
      ) as HTMLButtonElement;
      const submitText = submitButton.querySelector(
        '.subscribe-text',
      ) as HTMLElement;
      const loadingText = submitButton.querySelector(
        '.loading-text',
      ) as HTMLElement;
      const formStatus = document.getElementById(
        'newsletterStatus',
      ) as HTMLElement;

      // Show loading state
      submitButton.disabled = true;
      submitText.classList.add('hidden');
      loadingText.classList.remove('hidden');
      formStatus.classList.add('hidden');

      try {
        const formData = new FormData(form);

        const response = await fetch('/api/newsletter', {
          method: 'POST',
          body: formData,
        });

        const result = await response.json();

        if (response.ok) {
          // Success
          formStatus.className =
            'bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded text-center';
          formStatus.textContent =
            "Success! You're now subscribed to our newsletter.";
          form.reset();
        } else {
          // Error from server
          formStatus.className =
            'bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded text-center';
          formStatus.textContent =
            result.error || 'Failed to subscribe. Please try again.';
        }
      } catch (error) {
        // Network or other error
        formStatus.className =
          'bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded text-center';
        formStatus.textContent = 'Network error. Please try again.';
        console.error('Newsletter subscription error:', error);
      } finally {
        // Reset button state
        submitButton.disabled = false;
        submitText.classList.remove('hidden');
        loadingText.classList.add('hidden');
        formStatus.classList.remove('hidden');
      }
    });
</script>
